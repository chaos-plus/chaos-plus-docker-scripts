

# docker network create --driver overlay --attachable cluster
networks:
  default:
    name: ${NETWORK}
    external: true

services:

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    restart: ${SRV_RESTART_MODE:-always}
    network_mode: ${SRV_NETWORK_MODE:-${NETWORK_MODE_KAFKA:-}}
    ports:
      - '${PORT_KAFKA}:9092'
      - '${PORT_KAFKA_CONTROLLER}:9093'
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=kraft-cluster-1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ${DATA}/kafka:/bitnami/kafka
    deploy:
      placement:
        constraints: 
          - node.role == manager
      resources:
        limits:
          memory: ${RES_LIMIT_MEM}
        reservations:
          memory: ${RES_RESER_MEM}

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - '${PORT_KAFKA_UI}:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    deploy:
      placement:
        constraints: 
          - node.role == manager
      resources:
        limits:
          memory: ${RES_LIMIT_MEM}
        reservations:
          memory: ${RES_RESER_MEM}
